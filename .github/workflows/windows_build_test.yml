name: Windows Build/Test

on:
  # allows us to run workflows manually
  workflow_dispatch:
  push:
    branches:
      - main

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  BuildTest:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: msys
          update: true
          path-type: strict
          install: >-
            base-devel
            zlib-devel
            libcurl-devel
            libzstd-devel
            git
            gcc
            cmake
            ninja

      - name: Which cmake
        run: |
          cmake --version
          which cmake
          
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf input

      - name: Build and Install HDF5
        run: |
          cd $GITHUB_WORKSPACE
          git clone --depth 1 https://github.com/HDFGroup/hdf5.git -b hdf5_1_14_5
          cd hdf5
          mkdir build
          cd build
          cmake .. \
            -G "Ninja" \
            -DCMAKE_INSTALL_PREFIX=/usr \
            -DBUILD_SHARED_LIBS=ON \
            -DHDF5_ENABLE_PARALLEL=OFF \
            -DHDF5_BUILD_CPP_LIB=OFF \
            -DHDF5_BUILD_FORTRAN=OFF \
            -DHDF5_BUILD_JAVA=OFF \
            -DHDF5_BUILD_DOC=OFF
          cmake --build . --config Release
          cmake --install . --config Release

      - name: Build and Install Eigen3
        run: |
          cd $GITHUB_WORKSPACE
          git clone --depth 1 https://gitlab.com/libeigen/eigen.git -b 3.4.0
          cd eigen
          mkdir build
          cd build
          cmake .. \
            -G "Ninja"
          cmake --build . --config Release
          cmake --install . --config Release

      - name: Build and Install MOAB
        run: |
          cd $GITHUB_WORKSPACE
          git clone --depth 1 https://bitbucket.org/ahnaf-tahmid-chowdhury/moab.git -b mingw
          cd moab
          mkdir build
          cd build
          cmake .. \
            -G "Ninja" \
            -DBUILD_SHARED_LIBS=ON \
            -DENABLE_BLASLAPACK=OFF \
            -DENABLE_FORTRAN=OFF \
            -DENABLE_IMESH=OFF \
            -DENABLE_TESTING=OFF \
            -DENABLE_HDF5=ON
          cmake --build . --config Release
          cmake --install . --config Release

      - name: Build and Install DAGMC
        run: |
          cd $GITHUB_WORKSPACE
          git clone --depth 1 https://github.com/ahnaf-tahmid-chowdhury/DAGMC.git -b fix-windows
          cd dagmc
          mkdir build
          cd build
          cmake .. \
            -G "Ninja" \
            -DCMAKE_INSTALL_PREFIX=/c/dagmc \
            -DBUILD_SHARED_LIBS=ON
          cmake --build . --config Release
          cmake --install . --config Release

      - name: Test DAGMC
        run: |
          export PATH=$PATH:/c/dagmc/bin
          cd /c/dagmc/tests
          dagmc_pointinvol_test.exe
          dagmc_rayfire_test.exe
          dagmc_simple_test.exe
          dagmc_unit_tests.exe
          make_watertight_cone_tests.exe
          make_watertight_cylinder_tests.exe
          make_watertight_no_curve_sphere_tests.exe
          make_watertight_sphere_n_box_test.exe

      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 150